// source: airdrop/v4/airdrop_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var common_v4_model_pb = require('../../common/v4/model_pb.js');
goog.object.extend(proto, common_v4_model_pb);
goog.exportSymbol('proto.kin.agora.airdrop.v4.RequestAirdropRequest', null, global);
goog.exportSymbol('proto.kin.agora.airdrop.v4.RequestAirdropResponse', null, global);
goog.exportSymbol('proto.kin.agora.airdrop.v4.RequestAirdropResponse.Result', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kin.agora.airdrop.v4.RequestAirdropRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kin.agora.airdrop.v4.RequestAirdropRequest.displayName = 'proto.kin.agora.airdrop.v4.RequestAirdropRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kin.agora.airdrop.v4.RequestAirdropResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kin.agora.airdrop.v4.RequestAirdropResponse.displayName = 'proto.kin.agora.airdrop.v4.RequestAirdropResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kin.agora.airdrop.v4.RequestAirdropRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: (f = msg.getAccountId()) && common_v4_model_pb.SolanaAccountId.toObject(includeInstance, f),
    quarks: jspb.Message.getFieldWithDefault(msg, 2, 0),
    commitment: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropRequest}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kin.agora.airdrop.v4.RequestAirdropRequest;
  return proto.kin.agora.airdrop.v4.RequestAirdropRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropRequest}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_v4_model_pb.SolanaAccountId;
      reader.readMessage(value,common_v4_model_pb.SolanaAccountId.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuarks(value);
      break;
    case 3:
      var value = /** @type {!proto.kin.agora.common.v4.Commitment} */ (reader.readEnum());
      msg.setCommitment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kin.agora.airdrop.v4.RequestAirdropRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_v4_model_pb.SolanaAccountId.serializeBinaryToWriter
    );
  }
  f = message.getQuarks();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCommitment();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional kin.agora.common.v4.SolanaAccountId account_id = 1;
 * @return {?proto.kin.agora.common.v4.SolanaAccountId}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.getAccountId = function() {
  return /** @type{?proto.kin.agora.common.v4.SolanaAccountId} */ (
    jspb.Message.getWrapperField(this, common_v4_model_pb.SolanaAccountId, 1));
};


/**
 * @param {?proto.kin.agora.common.v4.SolanaAccountId|undefined} value
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} returns this
*/
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} returns this
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.clearAccountId = function() {
  return this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 quarks = 2;
 * @return {number}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.getQuarks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} returns this
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.setQuarks = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional kin.agora.common.v4.Commitment commitment = 3;
 * @return {!proto.kin.agora.common.v4.Commitment}
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.getCommitment = function() {
  return /** @type {!proto.kin.agora.common.v4.Commitment} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.kin.agora.common.v4.Commitment} value
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropRequest} returns this
 */
proto.kin.agora.airdrop.v4.RequestAirdropRequest.prototype.setCommitment = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kin.agora.airdrop.v4.RequestAirdropResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    signature: (f = msg.getSignature()) && common_v4_model_pb.TransactionSignature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropResponse}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kin.agora.airdrop.v4.RequestAirdropResponse;
  return proto.kin.agora.airdrop.v4.RequestAirdropResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropResponse}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.kin.agora.airdrop.v4.RequestAirdropResponse.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = new common_v4_model_pb.TransactionSignature;
      reader.readMessage(value,common_v4_model_pb.TransactionSignature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kin.agora.airdrop.v4.RequestAirdropResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_v4_model_pb.TransactionSignature.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.Result = {
  OK: 0,
  NOT_FOUND: 1,
  INSUFFICIENT_KIN: 2
};

/**
 * optional Result result = 1;
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropResponse.Result}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.getResult = function() {
  return /** @type {!proto.kin.agora.airdrop.v4.RequestAirdropResponse.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.kin.agora.airdrop.v4.RequestAirdropResponse.Result} value
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropResponse} returns this
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional kin.agora.common.v4.TransactionSignature signature = 2;
 * @return {?proto.kin.agora.common.v4.TransactionSignature}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.getSignature = function() {
  return /** @type{?proto.kin.agora.common.v4.TransactionSignature} */ (
    jspb.Message.getWrapperField(this, common_v4_model_pb.TransactionSignature, 2));
};


/**
 * @param {?proto.kin.agora.common.v4.TransactionSignature|undefined} value
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropResponse} returns this
*/
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.setSignature = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kin.agora.airdrop.v4.RequestAirdropResponse} returns this
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kin.agora.airdrop.v4.RequestAirdropResponse.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.kin.agora.airdrop.v4);
