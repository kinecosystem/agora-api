openapi: 3.0.0
info:
  title: Agora Webhooks
  description: |
    Spec for webhooks called by the Agora services. The paths are examples only - each
    app can configure their own.
  version: 1.0.0

paths:
  /events:
    post:
      summary: |
        A webhook for the Agora service to deliver blockchain events related to the app.
      parameters:
        - in: header
          name: X-Agora-HMAC-SHA256
          schema:
            type: string
            format: byte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventsRequestBody"
      responses:
        '200':
          description: Empty ok response.

  /sign_transaction:
    post:
      summary: |
        A webhook for the Agora service to submit transactions for signing. Each app is responsible for validating the
        transaction contents prior to signing and returning the transaction. Developers should expect that any
        transaction envelope payload returned in a 200 response will be submitted to Horizon.
      parameters:
        - in: header
          name: X-Agora-HMAC-SHA256
          schema:
            type: string
            format: byte
        - in: header
          name: X-App-User-ID
          schema:
            type: string
        - in: header
          name: X-App-User-Passkey
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignTransactionRequestBody"
      responses:
        '200':
          description: "Must contain the transaction payload, signed by the service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignTransactionSuccessResponse"
        '403':
          description: "Indicates that the service refused to sign the transaction."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignTransactionForbiddenResponse"
  /create_account:
    post:
      summary: |
        A webhook for the Agora service to call when an account creation is being requested. The endpoint may
        wish to allow or deny the creation, and if applicable, co-sign the transaction for subsidization to
        avoid rate limits.
      parameters:
        - in: header
          name: X-Agora-HMAC-SHA256
          schema:
            type: string
            format: byte
        - in: header
          name: X-App-User-ID
          schema:
            type: string
        - in: header
          name: X-App-User-Passkey
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequestBody"
      responses:
        '200':
          description: "Optionally contains the signature for the transaction if subsidizing"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountRequestBody"
        '403':
          description: "Indicates the service rejects the account creation"

components:
  schemas:
    # Shared schemas
    KinVersion:
      type: integer
      format: integer
    TransactionEnvelopeXDR:
      description: "A base64-encoded transaction envelope XDR."
      type: string
      format: byte
    ResultXDR:
      description: "A base64-encoded transaction result XDR."
      type: string
      format: byte
    SolanaTransaction:
      description: "A base64-encoded solana transaction payload"
      type: string
      format: byte
    InvoiceList:
      description: |
        A base64-encoded protobuf InvoiceList related to a transaction. Each invoice corresponds to an operation in the transaction.
      type: string
      format: byte

    Event:
      description: |
        An event container for a specific type of event triggered by a blockchain operation.
      type: object
      properties:
        transaction_event:
          $ref: "#/components/schemas/TransactionEvent"

    TransactionEvent:
      description: |
        An event indicating a transaction has completed (either succesfully or unsuccessfully).
      type: object
      required:
        - kin_version
      properties:
        kin_version:
          $ref: "#/components/schemas/KinVersion"
        # Deprecated(use tx_id instead): contains stellar transaction hash
        tx_hash:
          description: "[Deprecated] Stellar transaction hash"
          type: string
          format: byte
        tx_id:
          description: "The identifier for the transaction. Either a Stellar transaction hash or Solana signature"
          type: string
          format: byte
        invoice_list:
          $ref: "#/components/schemas/InvoiceList"
        stellar_event:
          $ref: "#/components/schemas/StellarEvent"
        solana_event:
          $ref: "#/components/schemas/SolanaEvent"

    StellarEvent:
      description: "Stellar-specific event data related to a transaction."
      type: object
      required:
        - result_xdr
        - transaction_xdr
      properties:
        result_xdr:
          $ref: "#/components/schemas/ResultXDR"
        envelope_xdr:
          $ref: "#/components/schemas/TransactionEnvelopeXDR"

    SolanaEvent:
      description: "Solana-specific event data related to a transaction."
      type: object
      required:
        - transaction
      properties:
        transaction:
          $ref: "#/components/schemas/SolanaTransaction"
        transaction_error:
          type: string
          enum:
            - none
            - unknown
            - unauthorized
            - bad_nonce
            - insufficient_funds
            - invalid_account
        transaction_error_raw:
          type: string

    EventsRequestBody:
      type: array
      items:
        $ref: "#/components/schemas/Event"

    # Sign Transaction Webhook schemas
    SignTransactionRequestBody:
      description: |
        The body of a a sign transaction request. Contains a transaction payload that should be verified prior to
        signing. If an invoice list is present, it contains data regarding what the transaction is for.
      type: object
      required:
        - kin_version
      properties:
        kin_version:
          $ref: "#/components/schemas/KinVersion"
        envelope_xdr:
          $ref: "#/components/schemas/TransactionEnvelopeXDR"
        solana_transaction:
          $ref: "#/components/schemas/SolanaTransaction"
        invoice_list:
          $ref: "#/components/schemas/InvoiceList"

    SignTransactionSuccessResponse:
      description: |
        The expected response for a successful sign transaction request. Contains an optional signature.
      type: object
      properties:
        signature:
          description: "The signature of the transaction. Not required if the transaction is already signed"
          type: string
          format: byte
    SignTransactionForbiddenResponse:
      type: object
      properties:
        invoice_errors:
          type: array
          items:
            type: object
            properties:
              operation_index:
                description: "the index of the operation the error pertains to"
                type: integer
              reason:
                type: string
                enum:
                  - already_paid
                  - wrong_destination
                  - sku_not_found
                description: |
                  * `already_paid`: the user has already paid for the submitted invoice
                  * `wrong_destination`: the destination account was incorrect
                  * `sku_not_found`: one or more skus in the invoice was not found
    CreateAcccountRequestBody:
      description: |
        The body of a a create accoungt request. Contains a create account transaction payload that should be
        verified prior to signing / approving.
      type: object
      required:
        - kin_version
      properties:
        kin_version:
          $ref: "#/components/schemas/KinVersion"
        solana_transaction:
          $ref: "#/components/schemas/SolanaTransaction"
